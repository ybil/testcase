---
- hosts: test
  become: yes
  gather_facts: no

  tasks:
  - name: Install base packages
  apt: name={{ item }} state=installed
  with_items:
    - locales
    - build-essential
    - acl
    - ntp
    - htop
    - git
    - supervisor
    - python-pip
    - python3-pip
    - nginx
  tags:
    - packages
    
- name: Check that the /usr/local/bin/python3.6 exists
  stat:
    path: /usr/local/bin/python3.6
  tags: python
  register: python_result
  
- name: Update apt-cache
  apt: update_cache=yes
  tags: packages, python
  when: python_result.stat.exists == False
  
- name: Install packages needed for installing Python
  apt: pkg={{ item }}
  with_items:
    - wget
    - xz-utils
    - build-essential
    - libsqlite3-dev
    - libreadline-dev
    - libssl-dev
    - openssl
  tags: packages, python
  when: python_result.stat.exists == False
  
- name: Extract python 3.6.4 into /tmp
  unarchive:
    src: https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tar.xz
    dest: /tmp/
    remote_src: yes
  tags: packages, python
  
- name: Configure python 3.6.4
  shell: ./configure chdir=/tmp/Python-3.6.4
  tags: packages, python
  when: python_result.stat.exists == False
  
- name: Make
  shell: make chdir=/tmp/Python-3.6.4
  tags: packages, python
  when: python_result.stat.exists == False
  
- name: Install Python 3.6.4
  shell: make install chdir=/tmp/Python-3.6.4
  become: yes
  become_user: root
  tags: packages, python
  when: python_result.stat.exists == False
  
- name: Remove tmp files used for Python 3.6.4 installation
  file: path={{ item }} state=absent
  with_items:
    - /tmp/Python.tar.xz
    - /tmp/Python-3.6.4
  tags: packages, python
  when: python_result.stat.exists == False

- hosts: testAPP
  become: yes
  become_user: postgres
  gather_facts: no

  vars:
    dbname: testAPPdb
    dbuser: testAPPuser
    dbpassword: testAPPpassword
    encrypted: yes

  tasks:
  - name: Check that database is created
    postgresql_db: name={{dbname}}

  - name: Check that user has access to database
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} encrypted={{encrypted}} priv=ALL

- hosts: test
  become: yes
  gather_facts: no
  tasks:

    - name: Copy the nginx config file
      copy:
        src: files/test_site.cfg
        dest: /etc/nginx/sites-available/test_site.cfg

    - name: Create symlink
      file:
        src: /etc/nginx/sites-available/test_site.cfg
        dest: /etc/nginx/sites-enabled/default
        state: link

    - name: Copy default html page
      copy:
        src: files/default_index.html
        dest: /var/www/html/default_index.html

    - name: Clone git repo
      git:
        repo: 'https://github.com/ybil/testAPP.git'
        dest: /var/www/testAPP
        version: master
        force: yes
   
    - name: Add exec permmisions to index.py
      file:
        path: /var/www/testAPP/test-master/hello-app/dynamic/index.py
        mode: 0755

    - name: Copy and add exec permissions to fcgi init-script
      copy:
        src: files/fcgi
        dest: /etc/init.d/fcgi
        mode: 0755

    - name: Add fcgi to autoboot
      raw: 'update-rc.d fcgi defaults'

    - name: Restart fcgi
      service:
        name: fcgi
        state: restarted
      become: yes

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
      become: yes
